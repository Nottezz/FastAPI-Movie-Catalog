[project]
name = "fastapiproject-films"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.115.12",
    "redis[hiredis]>=6.0.0",
    "typer>=0.15.2",
    "types-redis>=4.6.0.20241004",
]

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.12",
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
]
strict = true
ignore_missing_imports = true

[tool.ruff]
src = [
    "movie-catalog",
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py312"

[tool.ruff.lint]
select = [
    "ANN", # flake8-annotations (ANN)
    "FAST", # FastAPI (FAST)
    "I",  # isort (I)
    "F401", # Pyflakes (F)
    "S", # flake8-bandit (S)
    "LOG", # flake8-logging (LOG)
    "PT", # flake8-pytest-style (PT)
    "RET", # flake8-return (RET)
    "ARG", # flake8-unused-arguments (ARG)
    "T20", # flake8-print (T20)
    # "ASYNC", # flake8-async (ASYNC)
]
ignore = [

]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.extend-per-file-ignores]
"stuff.py" = [
    "T20",
]
